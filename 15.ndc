lines := read_file("input/15.test").lines();
w := lines[0].len();
h := lines.len();

units := %{};
walls := %{};
for y in 0..h, x in 0..w {
  c := lines[y][x];
  if c == "#" { walls.insert((y, x)); }
  else if c == "E" or c == "G" { units[y,x] = (y, x, c, 200) } 
}

dirs := [(-1, 0),(1, 0),(0,-1),(0,1)];
rounds := 0;

while true {
  uc := units.len();
  units_seq := [val for key, val in units].sorted();
  dbg(units_seq);
  for idx in 0..uc {
    cy, cx, ct, chp := units_seq[idx];

    locs := [cy + dy, dx + dx for dy, dx in dirs, if ((cy + dy), (cx + dx)) not in walls ];
    et := if ct == "G" { "E" } else { "G" };


    enemies_in_range := [units[y, x] for y, x in locs, if (y, x) in units and units[y, x][2] == et];
    if enemies_in_range.len() > 0  {
      dbg("ENEM", enemies_in_range);
    }

    assert(false);

    // print(locs);



    // Range check
    //
    // Move if not able to attack
    //
    // Attack if able
  }

  rounds += 1;
}
