lines = read_file("input/2").lines();

two, three := 0, 0;

for line in lines {
  has_two, has_three := false, false;

  for c in "abcdefghijklmnopqrstuvwxyz" {
    count := 0;
    for cc in line {
      if cc == c {
        count = count + 1;
      }
    }

    if count == 2 { 
      has_two = true;
    } else if count == 3{
      has_three = true;
    }
  }

  if has_two { 
    two += 1;
  }
  if has_three {
    three += 1;
  }
}

print("Part 1:", two * three);


fn part2() {
  for v, vv in lines.cartesian_product(lines) {
    idx := 0;
    len := v.len();
    diff := 0;
    while idx < len && diff <= 1 {
      if v[idx] != vv[idx] {
        diff += 1;
      }
      idx += 1;
    }
    
    // if diff is exactly one
    if diff == 1 {
      idx = 0;
      ans := "";
      while idx < len {
        if v[idx] == vv[idx] {
          ans.append(vv[idx]);
        }
        idx += 1;
      }
      return ans;
    }
  }
}

print("Part 2:", part2());
