data := read_file("input/8").trim().nums();
// data := "2 3 0 3 10 11 12 1 1 0 1 99 2 1 1 2".nums();

children_map := %{};
metadata_map := %{};
node := 0;
idx := 0;

fn process() {
  cur_node := (node += 1);
  children_count := data[idx];
  idx += 1;
  metadata_count := data[idx];
  idx += 1;


  children_map[cur_node] = [process() for _ in 0..children_count];
  
  metadata := []
  for n in 0..metadata_count {
    metadata.push(data[idx]);
    idx += 1;
  }
  
  metadata_map[cur_node] = metadata;

  return cur_node;
}


process();

p1 := [metadata.sum() for _, metadata in metadata_map, if metadata.len() > 0].sum();

fn calc_node_value(node_id) {
  children := children_map[node_id];
  metadata := metadata_map[node_id];
  if children.len() == 0 {
    metadata.sum()
  } else {
    [calc_node_value(children[idx - 1]) for idx in metadata, if idx <= children.len()].sum()
  }
}

print("Part 1", p1);
print("Part 2", calc_node_value(1));

